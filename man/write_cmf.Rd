% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_cmf.R
\name{write_cmf}
\alias{write_cmf}
\title{Write a Command File (CMF) for GEMPACK}
\usage{
write_cmf(cmf_filename, input_files, output_files, out_dir, workdir = getwd())
}
\arguments{
\item{cmf_filename}{Character string. The name of the CMF file to be created.}

\item{input_files}{Named list. Names and paths of input files to be included in the CMF.}

\item{output_files}{Named list. Names and paths of output files to be included in the CMF.}

\item{out_dir}{Character string. Directory where the CMF file will be saved. If NULL, current working directory is used.}

\item{workdir}{Character string. Working directory for file paths. Default is the current working directory.}
}
\value{
Character string. The full path to the created CMF file.
}
\description{
This function creates a Command File (CMF) used in GEMPACK operations, specifying input and output files.
}
\details{
The function creates a CMF file with the following structure:
\enumerate{
\item A header for input files.
\item List of input files with their paths.
\item A header for output files.
\item List of output files with their paths.
}

The function ensures that the output directory exists, creating it if necessary.
}
\examples{
\dontrun{
input_files <- list(GTAPSETS = "sets.har", GTAPDATA = "basedata.har")
output_files <- list(GTAPVIEW = "baseview.har")
cmf_path <- write_cmf("example.cmf", input_files, output_files, "path/to/output")
print(cmf_path)
}

}
